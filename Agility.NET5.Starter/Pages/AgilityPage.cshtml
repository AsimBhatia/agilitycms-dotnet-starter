@page
@using NET5.Core.Helpers
@using NET5.FetchAPI.Models

@model NET5.Starter.Pages.AgilityPageModel

@{
    Layout = PageHelpers.GetPageTemplatePath(Model.PageResponse.TemplateName);
    var scripts = Model.PageResponse.Scripts;
}

@{

    DefineSection("SEO", async () =>
    {
        Write(await Component.InvokeAsync("SEO", Model.PageResponse));
    });
}

@if (!string.IsNullOrEmpty(scripts.Top))
{
    @Html.Raw($"<script>{scripts.Top}</script>")
}

@{
    DefineSection("TopZone", async () =>
    {
        Write(await Component.InvokeAsync("SiteHeader", Model.Locale));
    });
}

@foreach (var contentZone in Model.ContentZones)
{
    DefineSection(contentZone.ReferenceName, async () =>
    {

        foreach (var model in contentZone.Modules)
        {
            var moduleModel = new ModuleModel()
            {
                Locale = Model.Locale,
                Module = model.Item.Fields.ToString(),
                Model = model,
                SitemapPage = Model.SitemapPage
            };

            Write(await Component.InvokeAsync(model.Item.Properties.DefinitionName, moduleModel));
        }
    });
}

@if (!string.IsNullOrEmpty(scripts.Bottom))
{
    @Html.Raw($"<script>{scripts.Bottom}</script>")
}